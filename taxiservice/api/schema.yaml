openapi: 3.0.3
info:
  title: OpenAPI Specification
  description: An API for ordering taxi
  version: 1.0.0

components:
  parameters:
    X-User-Id:
      name: X-User-Id
      in: header
      required: true
      description: The ID of the user making the request
      schema:
        type: integer
        minimum: 1
  schemas:
    CreateOrder:
      type: object
      required:
        - idempotency_key
        - pickup_location
        - dropoff_location
      properties:
        idempotency_key:
          type: string
          description: A unique key to ensure the request is idempotent
        pickup_location:
          $ref: '#/components/schemas/Location'
        dropoff_location:
          $ref: '#/components/schemas/Location'
    Order:
      type: object
      required:
        - id
        - pickup_location
        - dropoff_location
        - created_at
        - total_price
      properties:
        id:
          type: string
          description: The ID of the order
        pickup_location:
          $ref: '#/components/schemas/Location'
        dropoff_location:
          $ref: '#/components/schemas/Location'
        created_at:
          type: string
          format: date
          description: The time the order was created
        completed_at:
          type: string
          format: date
          description: The time the order was completed
        total_price:
          type: integer
          description: The total price of the order
    Location:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          description: The latitude of the location
        longitude:
          type: number
          description: The longitude of the location
    Error:
      type: object
      properties:
        message:
          type: string
          description: A human-readable error message

paths:
    /orders:
      post:
        summary: Create a new order
        parameters:
            - $ref: '#/components/parameters/X-User-Id'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
        responses:
            '201':
              description: Order created successfully
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/Order'
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '500':
                description: Internal server error
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
      get:
        summary: Get all orders
        parameters:
            - $ref: '#/components/parameters/X-User-Id'
        responses:
            '200':
              description: A list of orders
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '500':
                description: Internal server error
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/Error'